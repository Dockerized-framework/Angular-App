name: Deploy to ECR

on:
 
  push:
    branches:
      - deploy

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: angular-app
        IMAGE_TAG1: ${{ github.sha }}
        IMAGE_TAG2: latest

      run: |
        #Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG1 .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG2 .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG1
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG2
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG1"
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG2"
  
    - name: Deploy
      uses: cancue/eks-action@v0.0.2
      env:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: us-east-2
        cluster_name: k8s-lab
      with:
        args: |
          kubectl -n pipeline apply -f manifest/deployment.yaml
          kubectl -n pipeline apply -f manifest/service.yaml
          kubectl -n pipeline apply -f manifest/ingress.yaml
    
    - name: verify deployment
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: rollout restart deployment/test-pipeline
